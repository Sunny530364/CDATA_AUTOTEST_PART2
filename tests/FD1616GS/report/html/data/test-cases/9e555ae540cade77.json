{
  "uid" : "9e555ae540cade77",
  "name" : "测试mapping为transaprent",
  "fullName" : "test_onu_gemport#test_gemport_transparent",
  "historyId" : "1a9072bbfbefcc7d87bd4d581117019e",
  "time" : {
    "start" : 1594301188064,
    "stop" : 1594301247616,
    "duration" : 59552
  },
  "description" : "\n    用例描述\n    测试目的： 测试mapping-mode is vlan , mapping 为transparent时，vlan2000和vlan2001的报文上下行是都正常\n    测试步骤：\n    步骤1:发现未注册的ONU\n    步骤2:在OLT上通过SN的方式将ONU注册上线\n    步骤3:修改gemport配置为transparent\n    步骤4:配置虚端口vlan2000透传，vlan2001透传\n    步骤5:打流测试\n    1）上下行发vlan2000和vlan2001的报文\n    预期结果：上下行报文正常通\n\n    ",
  "descriptionHtml" : "<pre><code>用例描述\n测试目的： 测试mapping-mode is vlan , mapping 为transparent时，vlan2000和vlan2001的报文上下行是都正常\n测试步骤：\n步骤1:发现未注册的ONU\n步骤2:在OLT上通过SN的方式将ONU注册上线\n步骤3:修改gemport配置为transparent\n步骤4:配置虚端口vlan2000透传，vlan2001透传\n步骤5:打流测试\n1）上下行发vlan2000和vlan2001的报文\n预期结果：上下行报文正常通\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = autofind_onu(<telnetlib.Telnet object at 0x000001EB184D9C18>, '16', '2', '5A54453171200033')",
  "statusTrace" : "login = <telnetlib.Telnet object at 0x000001EB184D9C18>\n\n    @allure.feature(\"gemport测试\")\n    @allure.story(\"gemport测试\")\n    @allure.title(\"测试mapping为transaprent\")\n    @pytest.mark.run(order=10)\n    def test_gemport_transparent(login):\n        '''\n        用例描述\n        测试目的： 测试mapping-mode is vlan , mapping 为transparent时，vlan2000和vlan2001的报文上下行是都正常\n        测试步骤：\n        步骤1:发现未注册的ONU\n        步骤2:在OLT上通过SN的方式将ONU注册上线\n        步骤3:修改gemport配置为transparent\n        步骤4:配置虚端口vlan2000透传，vlan2001透传\n        步骤5:打流测试\n        1）上下行发vlan2000和vlan2001的报文\n        预期结果：上下行报文正常通\n    \n        '''\n        cdata_info(\"=========gemport为tranparent测试=========\")\n        Vlan_list = [2000, 2001]\n        tn = login\n        with allure.step('步骤1:发现未注册的ONU。'):\n>           assert autofind_onu(tn, PonID, OnuID, SN)\nE           AssertionError: assert False\nE            +  where False = autofind_onu(<telnetlib.Telnet object at 0x000001EB184D9C18>, '16', '2', '5A54453171200033')\n\ntest_onu_gemport.py:119: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "__pytest_repeat_step_number",
    "time" : {
      "start" : 1594301175007,
      "stop" : 1594301175007,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1594301175007,
      "stop" : 1594301175007,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "login",
    "time" : {
      "start" : 1594301175007,
      "stop" : 1594301188063,
      "duration" : 13056
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1594296062434,
      "stop" : 1594296062434,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1594296062433,
      "stop" : 1594296062433,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1594296062433,
      "stop" : 1594296062433,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n    用例描述\n    测试目的： 测试mapping-mode is vlan , mapping 为transparent时，vlan2000和vlan2001的报文上下行是都正常\n    测试步骤：\n    步骤1:发现未注册的ONU\n    步骤2:在OLT上通过SN的方式将ONU注册上线\n    步骤3:修改gemport配置为transparent\n    步骤4:配置虚端口vlan2000透传，vlan2001透传\n    步骤5:打流测试\n    1）上下行发vlan2000和vlan2001的报文\n    预期结果：上下行报文正常通\n\n    ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = autofind_onu(<telnetlib.Telnet object at 0x000001EB184D9C18>, '16', '2', '5A54453171200033')",
    "statusTrace" : "login = <telnetlib.Telnet object at 0x000001EB184D9C18>\n\n    @allure.feature(\"gemport测试\")\n    @allure.story(\"gemport测试\")\n    @allure.title(\"测试mapping为transaprent\")\n    @pytest.mark.run(order=10)\n    def test_gemport_transparent(login):\n        '''\n        用例描述\n        测试目的： 测试mapping-mode is vlan , mapping 为transparent时，vlan2000和vlan2001的报文上下行是都正常\n        测试步骤：\n        步骤1:发现未注册的ONU\n        步骤2:在OLT上通过SN的方式将ONU注册上线\n        步骤3:修改gemport配置为transparent\n        步骤4:配置虚端口vlan2000透传，vlan2001透传\n        步骤5:打流测试\n        1）上下行发vlan2000和vlan2001的报文\n        预期结果：上下行报文正常通\n    \n        '''\n        cdata_info(\"=========gemport为tranparent测试=========\")\n        Vlan_list = [2000, 2001]\n        tn = login\n        with allure.step('步骤1:发现未注册的ONU。'):\n>           assert autofind_onu(tn, PonID, OnuID, SN)\nE           AssertionError: assert False\nE            +  where False = autofind_onu(<telnetlib.Telnet object at 0x000001EB184D9C18>, '16', '2', '5A54453171200033')\n\ntest_onu_gemport.py:119: AssertionError",
    "steps" : [ {
      "name" : "步骤1:发现未注册的ONU。",
      "time" : {
        "start" : 1594301188065,
        "stop" : 1594301247614,
        "duration" : 59549
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert False\n +  where False = autofind_onu(<telnetlib.Telnet object at 0x000001EB184D9C18>, '16', '2', '5A54453171200033')\n",
      "statusTrace" : "  File \"E:\\CDATA\\自动化测试\\Cdata_part11\\tests\\GponSfu\\test_onu_gemport.py\", line 119, in test_gemport_transparent\n    assert autofind_onu(tn, PonID, OnuID, SN)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "afa2ee4d6a5f938c",
      "name" : "log",
      "source" : "afa2ee4d6a5f938c.txt",
      "type" : "text/plain",
      "size" : 851
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "login::0",
    "time" : {
      "start" : 1594301247635,
      "stop" : 1594301307091,
      "duration" : 59456
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "gemport测试"
  }, {
    "name" : "feature",
    "value" : "gemport测试"
  }, {
    "name" : "suite",
    "value" : "test_onu_gemport"
  }, {
    "name" : "host",
    "value" : "DESKTOP-2JV12RE"
  }, {
    "name" : "thread",
    "value" : "31328-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_onu_gemport"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "__pytest_repeat_step_number",
    "value" : "0"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9e555ae540cade77.json",
  "parameterValues" : [ "0" ]
}