{
  "uid" : "f2d1a1999769db4c",
  "name" : "测试onu端口出口限速",
  "fullName" : "test_onu_limitrate#test_ont_port_outbound_limitrate",
  "historyId" : "ade4603e14026644d60b10661bddc14f",
  "time" : {
    "start" : 1594278889343,
    "stop" : 1594278928337,
    "duration" : 38994
  },
  "description" : "\n    用例描述\n    测试目的： 测试onu端口上行限速是否正常\n    测试步骤：\n    步骤1: 发现未注册的ONU\n    步骤2: 在OLT上通过SN的方式将ONU注册上线\n    步骤3: 配置onu端口的入口的速率（traffic-profile 2:\n           traffic-profile  profile-id 2 profile-name outbound_limit cir 10240 pir 20480 cbs 2000 pbs 2000)\n    步骤4: 配置虚端口vlan2000透传\n    步骤5: 打流测试\n    测试方法: 上下行各发送流：vlan2000 (速率为端口速率的%10)\n    预期结果: 上下行正常通，上行不限速，下行限速20M\n\n    ",
  "descriptionHtml" : "<pre><code>用例描述\n测试目的： 测试onu端口上行限速是否正常\n测试步骤：\n步骤1: 发现未注册的ONU\n步骤2: 在OLT上通过SN的方式将ONU注册上线\n步骤3: 配置onu端口的入口的速率（traffic-profile 2:\n       traffic-profile  profile-id 2 profile-name outbound_limit cir 10240 pir 20480 cbs 2000 pbs 2000)\n步骤4: 配置虚端口vlan2000透传\n步骤5: 打流测试\n测试方法: 上下行各发送流：vlan2000 (速率为端口速率的%10)\n预期结果: 上下行正常通，上行不限速，下行限速20M\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "Exception: bring online port(Port_1) failed",
  "statusTrace" : "login = <telnetlib.Telnet object at 0x0000021A00637710>\n\n    @allure.feature(\"onu限速测试\")\n    @allure.story(\"onu端口限速测试\")\n    @allure.title(\"测试onu端口出口限速\")\n    @pytest.mark.run(order=20)\n    def test_ont_port_outbound_limitrate(login):\n        '''\n        用例描述\n        测试目的： 测试onu端口上行限速是否正常\n        测试步骤：\n        步骤1: 发现未注册的ONU\n        步骤2: 在OLT上通过SN的方式将ONU注册上线\n        步骤3: 配置onu端口的入口的速率（traffic-profile 2:\n               traffic-profile  profile-id 2 profile-name outbound_limit cir 10240 pir 20480 cbs 2000 pbs 2000)\n        步骤4: 配置虚端口vlan2000透传\n        步骤5: 打流测试\n        测试方法: 上下行各发送流：vlan2000 (速率为端口速率的%10)\n        预期结果: 上下行正常通，上行不限速，下行限速20M\n    \n        '''\n        cdata_info(\"=========ONU端口出口限速测试=========\")\n        tn = login\n        Vlan_list = [2000]\n    \n        with allure.step('步骤1:发现未注册的ONU。'):\n            assert autofind_onu(tn, PonID,  OnuID, SN)\n        with allure.step('步骤2:在OLT上通过SN的方式将ONU注册上线。'):\n            assert auth_by_sn(tn ,PonID, OnuID, Ont_Lineprofile_ID, Ont_Srvprofile_ID, SN)\n        with allure.step('步骤3:配置onu端口的入口的速率（traffic-profile ）'):\n            assert ont_port_limitrate_outbound(tn, traffic_profile_id=Traffic_Profile_ID_outbound,ponid=PonID,ontid=OnuID,ethid=Ont_Port_ID)\n        with allure.step('步骤4:添加虚端口vlan透传2000'):\n            assert add_service_port(tn, PonID, OnuID, Gemport_ID, Vlan_list)\n        with allure.step('步骤5:打流测试。'):\n            # 清除测试仪的对象，防止影响下个用例的执行\n            time.sleep(5)\n            reset_rom_cmd = ResetROMCommand()\n            reset_rom_cmd.execute()\n    \n            # 发流量测试，上下行发送流量，速率为100M\n            port_location = ['//192.168.0.180/1/9', '//192.168.0.180/1/10']\n            duration = 60\n            down_stream_header = (\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:11 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:22:22:21',)\n    \n            up_stream_header = (\n                'ethernetII_1.sourceMacAdd=00:00:00:22:22:21 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:11',)\n            # 获取所有流量的统计值\n            result_stats = rate_test(port_location=port_location, down_stream_header=down_stream_header,\n                                        up_stream_header=up_stream_header,\n                                        rate=10,\n>                                       duration=duration )\n\ntest_onu_limitrate.py:179: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\src\\xinertel\\unicast66.py:422: in rate_test\n    port1, port2 = create_ports(sys_entry, port_location)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsys_entry = <renix_py_api.api_gen.SysEntry_Autogen.SysEntry object at 0x0000021A004E4AC8>\nlocation = ['//192.168.0.180/1/9', '//192.168.0.180/1/10']\n\n    def create_ports(sys_entry, location):\n        '''\n        连接测试仪，预约端口并且使端口上线\n        :param sys_entry:创建测试仪的根节点\n        :param location: 存放端口\n        :return:port\n        '''\n        renix_info('create ports with location:'.format(location))\n        port1 = Port(upper=sys_entry, location=location[0])\n        port2 = Port(upper=sys_entry, location=location[1])\n        assert port1.handle\n        assert port2.handle\n        bring_port_online_cmd = BringPortsOnlineCommand(portlist=[port1.handle, port2.handle])\n        bring_port_online_cmd.execute()\n        if not wait_port_online(port1):\n>           raise Exception('bring online port({}) failed'.format(port1.handle))\nE           Exception: bring online port(Port_1) failed\n\n..\\..\\src\\xinertel\\unicast66.py:31: Exception",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1594278790504,
      "stop" : 1594278790504,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1594278790503,
      "stop" : 1594278790503,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1594278876289,
      "stop" : 1594278876289,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1594278790504,
      "stop" : 1594278790504,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "login",
    "time" : {
      "start" : 1594278876289,
      "stop" : 1594278889343,
      "duration" : 13054
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n    用例描述\n    测试目的： 测试onu端口上行限速是否正常\n    测试步骤：\n    步骤1: 发现未注册的ONU\n    步骤2: 在OLT上通过SN的方式将ONU注册上线\n    步骤3: 配置onu端口的入口的速率（traffic-profile 2:\n           traffic-profile  profile-id 2 profile-name outbound_limit cir 10240 pir 20480 cbs 2000 pbs 2000)\n    步骤4: 配置虚端口vlan2000透传\n    步骤5: 打流测试\n    测试方法: 上下行各发送流：vlan2000 (速率为端口速率的%10)\n    预期结果: 上下行正常通，上行不限速，下行限速20M\n\n    ",
    "status" : "broken",
    "statusMessage" : "Exception: bring online port(Port_1) failed",
    "statusTrace" : "login = <telnetlib.Telnet object at 0x0000021A00637710>\n\n    @allure.feature(\"onu限速测试\")\n    @allure.story(\"onu端口限速测试\")\n    @allure.title(\"测试onu端口出口限速\")\n    @pytest.mark.run(order=20)\n    def test_ont_port_outbound_limitrate(login):\n        '''\n        用例描述\n        测试目的： 测试onu端口上行限速是否正常\n        测试步骤：\n        步骤1: 发现未注册的ONU\n        步骤2: 在OLT上通过SN的方式将ONU注册上线\n        步骤3: 配置onu端口的入口的速率（traffic-profile 2:\n               traffic-profile  profile-id 2 profile-name outbound_limit cir 10240 pir 20480 cbs 2000 pbs 2000)\n        步骤4: 配置虚端口vlan2000透传\n        步骤5: 打流测试\n        测试方法: 上下行各发送流：vlan2000 (速率为端口速率的%10)\n        预期结果: 上下行正常通，上行不限速，下行限速20M\n    \n        '''\n        cdata_info(\"=========ONU端口出口限速测试=========\")\n        tn = login\n        Vlan_list = [2000]\n    \n        with allure.step('步骤1:发现未注册的ONU。'):\n            assert autofind_onu(tn, PonID,  OnuID, SN)\n        with allure.step('步骤2:在OLT上通过SN的方式将ONU注册上线。'):\n            assert auth_by_sn(tn ,PonID, OnuID, Ont_Lineprofile_ID, Ont_Srvprofile_ID, SN)\n        with allure.step('步骤3:配置onu端口的入口的速率（traffic-profile ）'):\n            assert ont_port_limitrate_outbound(tn, traffic_profile_id=Traffic_Profile_ID_outbound,ponid=PonID,ontid=OnuID,ethid=Ont_Port_ID)\n        with allure.step('步骤4:添加虚端口vlan透传2000'):\n            assert add_service_port(tn, PonID, OnuID, Gemport_ID, Vlan_list)\n        with allure.step('步骤5:打流测试。'):\n            # 清除测试仪的对象，防止影响下个用例的执行\n            time.sleep(5)\n            reset_rom_cmd = ResetROMCommand()\n            reset_rom_cmd.execute()\n    \n            # 发流量测试，上下行发送流量，速率为100M\n            port_location = ['//192.168.0.180/1/9', '//192.168.0.180/1/10']\n            duration = 60\n            down_stream_header = (\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:11 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:22:22:21',)\n    \n            up_stream_header = (\n                'ethernetII_1.sourceMacAdd=00:00:00:22:22:21 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:11',)\n            # 获取所有流量的统计值\n            result_stats = rate_test(port_location=port_location, down_stream_header=down_stream_header,\n                                        up_stream_header=up_stream_header,\n                                        rate=10,\n>                                       duration=duration )\n\ntest_onu_limitrate.py:179: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\src\\xinertel\\unicast66.py:422: in rate_test\n    port1, port2 = create_ports(sys_entry, port_location)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsys_entry = <renix_py_api.api_gen.SysEntry_Autogen.SysEntry object at 0x0000021A004E4AC8>\nlocation = ['//192.168.0.180/1/9', '//192.168.0.180/1/10']\n\n    def create_ports(sys_entry, location):\n        '''\n        连接测试仪，预约端口并且使端口上线\n        :param sys_entry:创建测试仪的根节点\n        :param location: 存放端口\n        :return:port\n        '''\n        renix_info('create ports with location:'.format(location))\n        port1 = Port(upper=sys_entry, location=location[0])\n        port2 = Port(upper=sys_entry, location=location[1])\n        assert port1.handle\n        assert port2.handle\n        bring_port_online_cmd = BringPortsOnlineCommand(portlist=[port1.handle, port2.handle])\n        bring_port_online_cmd.execute()\n        if not wait_port_online(port1):\n>           raise Exception('bring online port({}) failed'.format(port1.handle))\nE           Exception: bring online port(Port_1) failed\n\n..\\..\\src\\xinertel\\unicast66.py:31: Exception",
    "steps" : [ {
      "name" : "步骤1:发现未注册的ONU。",
      "time" : {
        "start" : 1594278889344,
        "stop" : 1594278890485,
        "duration" : 1141
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤2:在OLT上通过SN的方式将ONU注册上线。",
      "time" : {
        "start" : 1594278890485,
        "stop" : 1594278908667,
        "duration" : 18182
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤3:配置onu端口的入口的速率（traffic-profile ）",
      "time" : {
        "start" : 1594278908667,
        "stop" : 1594278908787,
        "duration" : 120
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤4:添加虚端口vlan透传2000",
      "time" : {
        "start" : 1594278908787,
        "stop" : 1594278912829,
        "duration" : 4042
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤5:打流测试。",
      "time" : {
        "start" : 1594278912829,
        "stop" : 1594278928337,
        "duration" : 15508
      },
      "status" : "broken",
      "statusMessage" : "Exception: bring online port(Port_1) failed\n",
      "statusTrace" : "  File \"E:\\CDATA\\自动化测试\\Cdata_part11\\tests\\GponSfu\\test_onu_limitrate.py\", line 179, in test_ont_port_outbound_limitrate\n    duration=duration )\n  File \"E:\\CDATA\\自动化测试\\Cdata_part11\\src\\xinertel\\unicast66.py\", line 422, in rate_test\n    port1, port2 = create_ports(sys_entry, port_location)\n  File \"E:\\CDATA\\自动化测试\\Cdata_part11\\src\\xinertel\\unicast66.py\", line 31, in create_ports\n    raise Exception('bring online port({}) failed'.format(port1.handle))\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "98f3ea56e86f4711",
      "name" : "log",
      "source" : "98f3ea56e86f4711.txt",
      "type" : "text/plain",
      "size" : 780
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 5,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "login::0",
    "time" : {
      "start" : 1594278928372,
      "stop" : 1594278940568,
      "duration" : 12196
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "onu限速测试"
  }, {
    "name" : "story",
    "value" : "onu端口限速测试"
  }, {
    "name" : "suite",
    "value" : "test_onu_limitrate"
  }, {
    "name" : "host",
    "value" : "DESKTOP-2JV12RE"
  }, {
    "name" : "thread",
    "value" : "9324-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_onu_limitrate"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "f2d1a1999769db4c.json",
  "parameterValues" : [ ]
}