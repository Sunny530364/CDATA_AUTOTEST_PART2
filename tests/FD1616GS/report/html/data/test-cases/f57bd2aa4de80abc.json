{
  "uid" : "f57bd2aa4de80abc",
  "name" : "测试onu端口vlan为translate",
  "fullName" : "test_onu_vlan#test_onu_translate",
  "historyId" : "36d811e17dab82a3692637cae405347b",
  "time" : {
    "start" : 1594283109532,
    "stop" : 1594283124668,
    "duration" : 15136
  },
  "description" : "\n    用例描述\n    测试目的： 测试onu端口为translate，translate100-107 转2000-2007,测试上下行流量是否正常\n    测试步骤：\n    步骤1: 发现未注册的ONU\n    步骤2: 在OLT上通过SN的方式将ONU注册上线\n    步骤3：配置onu端口translate(100-800)转成（2000-2007）\n    步骤4：添加虚端口vlan透传2000,2001,2002, 2003, 2004, 2005, 2006, 2007, 2008\n    步骤5：打流测试\n    1）下行发vlan2000-2008的流，上行发vlan100-108的流\n    预期结果: 下行vlan2000-2007的通，下行vlan2008的不通；上行vlan100-107的通，下行vlan108的不通\n    步骤6：onu端口vlan恢复为transparent\n    ",
  "descriptionHtml" : "<pre><code>用例描述\n测试目的： 测试onu端口为translate，translate100-107 转2000-2007,测试上下行流量是否正常\n测试步骤：\n步骤1: 发现未注册的ONU\n步骤2: 在OLT上通过SN的方式将ONU注册上线\n步骤3：配置onu端口translate(100-800)转成（2000-2007）\n步骤4：添加虚端口vlan透传2000,2001,2002, 2003, 2004, 2005, 2006, 2007, 2008\n步骤5：打流测试\n1）下行发vlan2000-2008的流，上行发vlan100-108的流\n预期结果: 下行vlan2000-2007的通，下行vlan2008的不通；上行vlan100-107的通，下行vlan108的不通\n步骤6：onu端口vlan恢复为transparent\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = auth_by_sn(<telnetlib.Telnet object at 0x0000026C3BD4D9B0>, '16', '2', '200', '200', '5A54453171200033')",
  "statusTrace" : "login = <telnetlib.Telnet object at 0x0000026C3BD4D9B0>\n\n    @allure.feature(\"onu端口vlan测试\")\n    @allure.story(\"onu端口vlan测试\")\n    @allure.title(\"测试onu端口vlan为translate\")\n    @pytest.mark.run(order=17)\n    def test_onu_translate(login):\n        '''\n        用例描述\n        测试目的： 测试onu端口为translate，translate100-107 转2000-2007,测试上下行流量是否正常\n        测试步骤：\n        步骤1: 发现未注册的ONU\n        步骤2: 在OLT上通过SN的方式将ONU注册上线\n        步骤3：配置onu端口translate(100-800)转成（2000-2007）\n        步骤4：添加虚端口vlan透传2000,2001,2002, 2003, 2004, 2005, 2006, 2007, 2008\n        步骤5：打流测试\n        1）下行发vlan2000-2008的流，上行发vlan100-108的流\n        预期结果: 下行vlan2000-2007的通，下行vlan2008的不通；上行vlan100-107的通，下行vlan108的不通\n        步骤6：onu端口vlan恢复为transparent\n        '''\n    \n        cdata_info(\"=========测试ONU端口vlan为translate=========\")\n        Vlan_list = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008]\n        tn = login\n        with allure.step('步骤1:发现未注册的ONU。'):\n            assert autofind_onu(tn, PonID, OnuID, SN)\n        with allure.step('步骤2:在OLT上通过SN的方式将ONU注册上线。'):\n>           assert auth_by_sn(tn, PonID, OnuID, Ont_Lineprofile_ID, Ont_Srvprofile_ID, SN)\nE           AssertionError: assert False\nE            +  where False = auth_by_sn(<telnetlib.Telnet object at 0x0000026C3BD4D9B0>, '16', '2', '200', '200', '5A54453171200033')\n\ntest_onu_vlan.py:291: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1594281048001,
      "stop" : 1594281048001,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1594283096460,
      "stop" : 1594283096460,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "__pytest_repeat_step_number",
    "time" : {
      "start" : 1594283096460,
      "stop" : 1594283096460,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1594281048001,
      "stop" : 1594281048001,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1594281048001,
      "stop" : 1594281048001,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "login",
    "time" : {
      "start" : 1594283096460,
      "stop" : 1594283109531,
      "duration" : 13071
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n    用例描述\n    测试目的： 测试onu端口为translate，translate100-107 转2000-2007,测试上下行流量是否正常\n    测试步骤：\n    步骤1: 发现未注册的ONU\n    步骤2: 在OLT上通过SN的方式将ONU注册上线\n    步骤3：配置onu端口translate(100-800)转成（2000-2007）\n    步骤4：添加虚端口vlan透传2000,2001,2002, 2003, 2004, 2005, 2006, 2007, 2008\n    步骤5：打流测试\n    1）下行发vlan2000-2008的流，上行发vlan100-108的流\n    预期结果: 下行vlan2000-2007的通，下行vlan2008的不通；上行vlan100-107的通，下行vlan108的不通\n    步骤6：onu端口vlan恢复为transparent\n    ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = auth_by_sn(<telnetlib.Telnet object at 0x0000026C3BD4D9B0>, '16', '2', '200', '200', '5A54453171200033')",
    "statusTrace" : "login = <telnetlib.Telnet object at 0x0000026C3BD4D9B0>\n\n    @allure.feature(\"onu端口vlan测试\")\n    @allure.story(\"onu端口vlan测试\")\n    @allure.title(\"测试onu端口vlan为translate\")\n    @pytest.mark.run(order=17)\n    def test_onu_translate(login):\n        '''\n        用例描述\n        测试目的： 测试onu端口为translate，translate100-107 转2000-2007,测试上下行流量是否正常\n        测试步骤：\n        步骤1: 发现未注册的ONU\n        步骤2: 在OLT上通过SN的方式将ONU注册上线\n        步骤3：配置onu端口translate(100-800)转成（2000-2007）\n        步骤4：添加虚端口vlan透传2000,2001,2002, 2003, 2004, 2005, 2006, 2007, 2008\n        步骤5：打流测试\n        1）下行发vlan2000-2008的流，上行发vlan100-108的流\n        预期结果: 下行vlan2000-2007的通，下行vlan2008的不通；上行vlan100-107的通，下行vlan108的不通\n        步骤6：onu端口vlan恢复为transparent\n        '''\n    \n        cdata_info(\"=========测试ONU端口vlan为translate=========\")\n        Vlan_list = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008]\n        tn = login\n        with allure.step('步骤1:发现未注册的ONU。'):\n            assert autofind_onu(tn, PonID, OnuID, SN)\n        with allure.step('步骤2:在OLT上通过SN的方式将ONU注册上线。'):\n>           assert auth_by_sn(tn, PonID, OnuID, Ont_Lineprofile_ID, Ont_Srvprofile_ID, SN)\nE           AssertionError: assert False\nE            +  where False = auth_by_sn(<telnetlib.Telnet object at 0x0000026C3BD4D9B0>, '16', '2', '200', '200', '5A54453171200033')\n\ntest_onu_vlan.py:291: AssertionError",
    "steps" : [ {
      "name" : "步骤1:发现未注册的ONU。",
      "time" : {
        "start" : 1594283109533,
        "stop" : 1594283110670,
        "duration" : 1137
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤2:在OLT上通过SN的方式将ONU注册上线。",
      "time" : {
        "start" : 1594283110670,
        "stop" : 1594283124668,
        "duration" : 13998
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert False\n +  where False = auth_by_sn(<telnetlib.Telnet object at 0x0000026C3BD4D9B0>, '16', '2', '200', '200', '5A54453171200033')\n",
      "statusTrace" : "  File \"E:\\CDATA\\自动化测试\\Cdata_part11\\tests\\GponSfu\\test_onu_vlan.py\", line 291, in test_onu_translate\n    assert auth_by_sn(tn, PonID, OnuID, Ont_Lineprofile_ID, Ont_Srvprofile_ID, SN)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "ad5608ce7684c7ef",
      "name" : "log",
      "source" : "ad5608ce7684c7ef.txt",
      "type" : "text/plain",
      "size" : 566
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "login::0",
    "time" : {
      "start" : 1594283124684,
      "stop" : 1594283184103,
      "duration" : 59419
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "onu端口vlan测试"
  }, {
    "name" : "story",
    "value" : "onu端口vlan测试"
  }, {
    "name" : "suite",
    "value" : "test_onu_vlan"
  }, {
    "name" : "host",
    "value" : "DESKTOP-2JV12RE"
  }, {
    "name" : "thread",
    "value" : "28716-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_onu_vlan"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "__pytest_repeat_step_number",
    "value" : "3"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f57bd2aa4de80abc.json",
  "parameterValues" : [ "3" ]
}