{
  "uid" : "b8c6a21fb91b6164",
  "name" : "测试onu组播正常通的情况",
  "fullName" : "test_onu_multicast#test_ont_snooping_001",
  "historyId" : "728f1e173e08f34ab8fbb27ff2f72749",
  "time" : {
    "start" : 1594693179174,
    "stop" : 1594693254773,
    "duration" : 75599
  },
  "description" : "\n    用例描述\n    测试目的：ont为snooping模式（mvlan为3000，ip 239.1.1.1）,onu的native-vlan为3000，测试onu为snooping模式下组播239.1.1.1是否通\n    测试步骤：\n    步骤1:发现未注册的ONU\n    步骤2:在OLT上通过SN的方式将ONU注册上线\n    步骤3:配置onu端口native-vlan为3000\n    步骤4:添加虚端口vlan透传3000\n    步骤5:onu端口绑定组播模板200（mvlan3000 ,ip 239.1.1.1 ,dynamic acl）\n    步骤6:打流测试\n    1）服务端发送数据流239.1.1.1，查看onu端口是否收到组播数据流239.1.1.1\n    预期结果:onu端口无法收到组播数据流\n    2）客户端发送report报文加入组播239.1.1.1 ，然后服务端口发送组播239.1.1.1的数据流(带tag3000)，10秒后，停止发流\n    预期结果:服务端收到report报文，客户端收到组播数据流239.1.1.1\n    3)客户端端口发送离开报文，离开组播组239.1.1.1\n    预期结果：客户端接收不到数据\n    ",
  "descriptionHtml" : "<pre><code>用例描述\n测试目的：ont为snooping模式（mvlan为3000，ip 239.1.1.1）,onu的native-vlan为3000，测试onu为snooping模式下组播239.1.1.1是否通\n测试步骤：\n步骤1:发现未注册的ONU\n步骤2:在OLT上通过SN的方式将ONU注册上线\n步骤3:配置onu端口native-vlan为3000\n步骤4:添加虚端口vlan透传3000\n步骤5:onu端口绑定组播模板200（mvlan3000 ,ip 239.1.1.1 ,dynamic acl）\n步骤6:打流测试\n1）服务端发送数据流239.1.1.1，查看onu端口是否收到组播数据流239.1.1.1\n预期结果:onu端口无法收到组播数据流\n2）客户端发送report报文加入组播239.1.1.1 ，然后服务端口发送组播239.1.1.1的数据流(带tag3000)，10秒后，停止发流\n预期结果:服务端收到report报文，客户端收到组播数据流239.1.1.1\n3)客户端端口发送离开报文，离开组播组239.1.1.1\n预期结果：客户端接收不到数据\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "base_url",
    "time" : {
      "start" : 1594692413999,
      "stop" : 1594692413999,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "login",
    "time" : {
      "start" : 1594693166125,
      "stop" : 1594693179173,
      "duration" : 13048
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1594692414000,
      "stop" : 1594692414000,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "__pytest_repeat_step_number",
    "time" : {
      "start" : 1594693166125,
      "stop" : 1594693166125,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1594692413999,
      "stop" : 1594692413999,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1594693166125,
      "stop" : 1594693166125,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n    用例描述\n    测试目的：ont为snooping模式（mvlan为3000，ip 239.1.1.1）,onu的native-vlan为3000，测试onu为snooping模式下组播239.1.1.1是否通\n    测试步骤：\n    步骤1:发现未注册的ONU\n    步骤2:在OLT上通过SN的方式将ONU注册上线\n    步骤3:配置onu端口native-vlan为3000\n    步骤4:添加虚端口vlan透传3000\n    步骤5:onu端口绑定组播模板200（mvlan3000 ,ip 239.1.1.1 ,dynamic acl）\n    步骤6:打流测试\n    1）服务端发送数据流239.1.1.1，查看onu端口是否收到组播数据流239.1.1.1\n    预期结果:onu端口无法收到组播数据流\n    2）客户端发送report报文加入组播239.1.1.1 ，然后服务端口发送组播239.1.1.1的数据流(带tag3000)，10秒后，停止发流\n    预期结果:服务端收到report报文，客户端收到组播数据流239.1.1.1\n    3)客户端端口发送离开报文，离开组播组239.1.1.1\n    预期结果：客户端接收不到数据\n    ",
    "status" : "passed",
    "steps" : [ {
      "name" : "步骤1:发现未注册的ONU。",
      "time" : {
        "start" : 1594693179175,
        "stop" : 1594693180318,
        "duration" : 1143
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤2:在OLT上通过SN的方式将ONU注册上线。",
      "time" : {
        "start" : 1594693180318,
        "stop" : 1594693194928,
        "duration" : 14610
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤3:配置onu端口native-vlan为3000",
      "time" : {
        "start" : 1594693194928,
        "stop" : 1594693195110,
        "duration" : 182
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤4:添加虚端口vlan透传3000",
      "time" : {
        "start" : 1594693195110,
        "stop" : 1594693199131,
        "duration" : 4021
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤5:onu端口绑定组播模板",
      "time" : {
        "start" : 1594693199132,
        "stop" : 1594693201344,
        "duration" : 2212
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤6:onu组播打流测试",
      "time" : {
        "start" : 1594693201344,
        "stop" : 1594693254773,
        "duration" : 53429
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "5c328e7f66b742ac",
      "name" : "log",
      "source" : "5c328e7f66b742ac.txt",
      "type" : "text/plain",
      "size" : 1240
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "stepsCount" : 6,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "login::0",
    "time" : {
      "start" : 1594693254775,
      "stop" : 1594693262880,
      "duration" : 8105
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "onu 组播测试"
  }, {
    "name" : "story",
    "value" : "onu 组播snooping测试"
  }, {
    "name" : "suite",
    "value" : "test_onu_multicast"
  }, {
    "name" : "host",
    "value" : "DESKTOP-2JV12RE"
  }, {
    "name" : "thread",
    "value" : "34000-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_onu_multicast"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "be344c3529d22681",
      "status" : "passed",
      "time" : {
        "start" : 1594274194344,
        "stop" : 1594274270078,
        "duration" : 75734
      }
    }, {
      "uid" : "3fa2852374c44cc9",
      "status" : "passed",
      "time" : {
        "start" : 1594273419551,
        "stop" : 1594273490664,
        "duration" : 71113
      }
    }, {
      "uid" : "512bc1c2fa9accdb",
      "status" : "passed",
      "time" : {
        "start" : 1594272983314,
        "stop" : 1594273050480,
        "duration" : 67166
      }
    }, {
      "uid" : "dfa1bc323fcd1696",
      "status" : "broken",
      "statusDetails" : "Exception: bring online port(Port_1) failed",
      "time" : {
        "start" : 1594272572702,
        "stop" : 1594272605545,
        "duration" : 32843
      }
    }, {
      "uid" : "b368cf6e5861a2c8",
      "status" : "passed",
      "time" : {
        "start" : 1594198764636,
        "stop" : 1594198815539,
        "duration" : 50903
      }
    }, {
      "uid" : "bfa4eec8f732324a",
      "status" : "passed",
      "time" : {
        "start" : 1594172588679,
        "stop" : 1594172638896,
        "duration" : 50217
      }
    }, {
      "uid" : "859eea5281f6781d",
      "status" : "broken",
      "statusDetails" : "TypeError: 'bool' object is not subscriptable",
      "time" : {
        "start" : 1594171041613,
        "stop" : 1594171041613,
        "duration" : 0
      }
    }, {
      "uid" : "afec88cab70a3750",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = autofind_onu(<telnetlib.Telnet object at 0x000002E21D376940>, '16', '2', '5A54453171200033')",
      "time" : {
        "start" : 1594128072034,
        "stop" : 1594128072034,
        "duration" : 0
      }
    }, {
      "uid" : "6ce95f0ee1a52243",
      "status" : "passed",
      "time" : {
        "start" : 1594122760644,
        "stop" : 1594122811580,
        "duration" : 50936
      }
    }, {
      "uid" : "3a1294ac5265ab55",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = autofind_onu(<telnetlib.Telnet object at 0x0000027E3568C588>, '16', '2', '5A54453171200033')",
      "time" : {
        "start" : 1594112755605,
        "stop" : 1594112755605,
        "duration" : 0
      }
    }, {
      "uid" : "8fd1702e6a6e128f",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = auth_by_sn(<telnetlib.Telnet object at 0x00000208E2995AC8>, '16', '2', '200', '200', '5A54453171200033')",
      "time" : {
        "start" : 1594037862783,
        "stop" : 1594037862783,
        "duration" : 0
      }
    }, {
      "uid" : "a2ece2359332510",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = auth_by_sn(<telnetlib.Telnet object at 0x00000208E297F8D0>, '16', '2', '200', '200', '5A54453171200033')",
      "time" : {
        "start" : 1594037775393,
        "stop" : 1594037775393,
        "duration" : 0
      }
    }, {
      "uid" : "838817ab4fb8c0c8",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = auth_by_sn(<telnetlib.Telnet object at 0x00000208E2936A58>, '16', '2', '200', '200', '5A54453171200033')",
      "time" : {
        "start" : 1594037687301,
        "stop" : 1594037687301,
        "duration" : 0
      }
    }, {
      "uid" : "3eea20ccfff8368e",
      "status" : "passed",
      "time" : {
        "start" : 1594019682191,
        "stop" : 1594019731509,
        "duration" : 49318
      }
    }, {
      "uid" : "c065842b33c91e63",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = autofind_onu(<telnetlib.Telnet object at 0x000001DFE487B4A8>, '16', '5A54453171200033')",
      "time" : {
        "start" : 1594019631244,
        "stop" : 1594019631244,
        "duration" : 0
      }
    }, {
      "uid" : "9cf2c21feec3d751",
      "status" : "broken",
      "statusDetails" : "TypeError: 'bool' object is not subscriptable",
      "time" : {
        "start" : 1593999767281,
        "stop" : 1593999767281,
        "duration" : 0
      }
    }, {
      "uid" : "17d12c58aa4cad2b",
      "status" : "passed",
      "time" : {
        "start" : 1593772106878,
        "stop" : 1593772157446,
        "duration" : 50568
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "b8c6a21fb91b6164.json",
  "parameterValues" : [ ]
}