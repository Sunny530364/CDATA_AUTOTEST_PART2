{
  "uid" : "6fb097f2cad29f9e",
  "name" : "SN认证",
  "fullName" : "test_onu_auth_type#test_auth_by_sn",
  "historyId" : "0d7a39e8d2561c12d0fbb4913b78b9b1",
  "time" : {
    "start" : 1594113182674,
    "stop" : 1594113226086,
    "duration" : 43412
  },
  "description" : "\n    用例描述：\n    ONU通过SN的方式认证。\n    例如：\n    ont add 1 1 sn-auth TEST12345678 ont-lineprofile-id 1 ont-srvprofile-id 1\n    ",
  "descriptionHtml" : "<pre><code>用例描述：\nONU通过SN的方式认证。\n例如：\nont add 1 1 sn-auth TEST12345678 ont-lineprofile-id 1 ont-srvprofile-id 1\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = stream_test('10', '100000', '10000', ['//192.168.0.180/1/9', '//192.168.0.180/1/10'])",
  "statusTrace" : "login = <telnetlib.Telnet object at 0x000001C29F0360B8>\n\n    @allure.feature(\"ONU认证\")\n    @allure.story(\"ONU认证方式\")\n    @allure.title(\"SN认证\")\n    @pytest.mark.run(order=2)\n    def test_auth_by_sn(login):\n        '''\n        用例描述：\n        ONU通过SN的方式认证。\n        例如：\n        ont add 1 1 sn-auth TEST12345678 ont-lineprofile-id 1 ont-srvprofile-id 1\n        '''\n        tn = login\n        with allure.step('步骤1:发现未注册的ONU。'):\n            assert autofind_onu(tn, PonID, OnuID, SN)\n        with allure.step('步骤2:在OLT上通过SN的方式将ONU注册上线。'):\n            assert auth_by_sn(tn, PonID, OnuID, Ont_Lineprofile_ID, Ont_Srvprofile_ID, SN)\n        with allure.step('步骤3:添加service_port'):\n            assert add_service_port(tn, PonID, OnuID, Gemport_ID, [2000, 4001])\n        with allure.step('步骤4:ONU的以太网口1添加NATIVE-VLAN'):\n            assert ont_native_vlan(tn, PonID, OnuID, '1', '2000')\n        with allure.step('步骤5:ONU的以太网口2添加NATIVE-VLAN'):\n            assert ont_native_vlan(tn, PonID, OnuID, '2', '4001')\n        with allure.step('步骤6:测试仪发送双向100000个报文'):\n>           assert stream_test(stream_rate, stream_num, download_capture_num, port_location)\nE           AssertionError: assert False\nE            +  where False = stream_test('10', '100000', '10000', ['//192.168.0.180/1/9', '//192.168.0.180/1/10'])\n\ntest_onu_auth_type.py:39: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "base_url",
    "time" : {
      "start" : 1594113123658,
      "stop" : 1594113123658,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "login",
    "time" : {
      "start" : 1594113169620,
      "stop" : 1594113182674,
      "duration" : 13054
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1594113123658,
      "stop" : 1594113123658,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1594113169620,
      "stop" : 1594113169620,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1594113123658,
      "stop" : 1594113123658,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n    用例描述：\n    ONU通过SN的方式认证。\n    例如：\n    ont add 1 1 sn-auth TEST12345678 ont-lineprofile-id 1 ont-srvprofile-id 1\n    ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = stream_test('10', '100000', '10000', ['//192.168.0.180/1/9', '//192.168.0.180/1/10'])",
    "statusTrace" : "login = <telnetlib.Telnet object at 0x000001C29F0360B8>\n\n    @allure.feature(\"ONU认证\")\n    @allure.story(\"ONU认证方式\")\n    @allure.title(\"SN认证\")\n    @pytest.mark.run(order=2)\n    def test_auth_by_sn(login):\n        '''\n        用例描述：\n        ONU通过SN的方式认证。\n        例如：\n        ont add 1 1 sn-auth TEST12345678 ont-lineprofile-id 1 ont-srvprofile-id 1\n        '''\n        tn = login\n        with allure.step('步骤1:发现未注册的ONU。'):\n            assert autofind_onu(tn, PonID, OnuID, SN)\n        with allure.step('步骤2:在OLT上通过SN的方式将ONU注册上线。'):\n            assert auth_by_sn(tn, PonID, OnuID, Ont_Lineprofile_ID, Ont_Srvprofile_ID, SN)\n        with allure.step('步骤3:添加service_port'):\n            assert add_service_port(tn, PonID, OnuID, Gemport_ID, [2000, 4001])\n        with allure.step('步骤4:ONU的以太网口1添加NATIVE-VLAN'):\n            assert ont_native_vlan(tn, PonID, OnuID, '1', '2000')\n        with allure.step('步骤5:ONU的以太网口2添加NATIVE-VLAN'):\n            assert ont_native_vlan(tn, PonID, OnuID, '2', '4001')\n        with allure.step('步骤6:测试仪发送双向100000个报文'):\n>           assert stream_test(stream_rate, stream_num, download_capture_num, port_location)\nE           AssertionError: assert False\nE            +  where False = stream_test('10', '100000', '10000', ['//192.168.0.180/1/9', '//192.168.0.180/1/10'])\n\ntest_onu_auth_type.py:39: AssertionError",
    "steps" : [ {
      "name" : "步骤1:发现未注册的ONU。",
      "time" : {
        "start" : 1594113182675,
        "stop" : 1594113183792,
        "duration" : 1117
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤2:在OLT上通过SN的方式将ONU注册上线。",
      "time" : {
        "start" : 1594113183792,
        "stop" : 1594113196104,
        "duration" : 12312
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤3:添加service_port",
      "time" : {
        "start" : 1594113196104,
        "stop" : 1594113201129,
        "duration" : 5025
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤4:ONU的以太网口1添加NATIVE-VLAN",
      "time" : {
        "start" : 1594113201129,
        "stop" : 1594113201294,
        "duration" : 165
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤5:ONU的以太网口2添加NATIVE-VLAN",
      "time" : {
        "start" : 1594113201294,
        "stop" : 1594113201435,
        "duration" : 141
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤6:测试仪发送双向100000个报文",
      "time" : {
        "start" : 1594113201435,
        "stop" : 1594113226085,
        "duration" : 24650
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert False\n +  where False = stream_test('10', '100000', '10000', ['//192.168.0.180/1/9', '//192.168.0.180/1/10'])\n",
      "statusTrace" : "  File \"E:\\CDATA\\自动化测试\\Cdata_part11\\tests\\GponSfu\\test_onu_auth_type.py\", line 39, in test_auth_by_sn\n    assert stream_test(stream_rate, stream_num, download_capture_num, port_location)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "5eee5b3fef153f58",
      "name" : "log",
      "source" : "5eee5b3fef153f58.txt",
      "type" : "text/plain",
      "size" : 938
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 6,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "login::0",
    "time" : {
      "start" : 1594113226308,
      "stop" : 1594113234458,
      "duration" : 8150
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "ONU认证"
  }, {
    "name" : "story",
    "value" : "ONU认证方式"
  }, {
    "name" : "suite",
    "value" : "test_onu_auth_type"
  }, {
    "name" : "host",
    "value" : "DESKTOP-2JV12RE"
  }, {
    "name" : "thread",
    "value" : "22800-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_onu_auth_type"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "6fb097f2cad29f9e.json",
  "parameterValues" : [ ]
}