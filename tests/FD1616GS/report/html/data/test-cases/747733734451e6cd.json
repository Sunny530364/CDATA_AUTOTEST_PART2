{
  "uid" : "747733734451e6cd",
  "name" : "测试onu跨组播vlan",
  "fullName" : "test_onu_multicast#test_ont_cross_mvlan",
  "historyId" : "9243f40ca1ff480677bc2d6ac7954ee9",
  "time" : {
    "start" : 1594274401203,
    "stop" : 1594274483607,
    "duration" : 82404
  },
  "description" : "\n    用例描述\n    测试目的：ont为snooping模式（mvlan为3000，ip 239.1.1.1）,onu的native-vlan为2000，测试onu的跨组播vlan是否正常的\n    测试步骤：\n    步骤1:发现未注册的ONU\n    步骤2:在OLT上通过SN的方式将ONU注册上线\n    步骤3:配置onu端口native-vlan为2000\n    步骤4:添加虚端口vlan透传2000\n    步骤5:onu端口绑定组播模板200（mvlan3000 ,ip 239.1.1.1 ,dynamic acl）\n    步骤6:打流测试\n    1）客户端发送report报文加入组播239.1.1.1 ，然后服务端口发送组播239.1.1.1的数据流，10秒后，停止发流\n    预期结果：服务端收到report报文，客户端收到组播数据流239.1.1.1\n    2)服务端发送组播数据流，客户端发送离开报文，离开组播组239.1.1.1\n    预期结果：客户端接收不到数据\n\n    ",
  "descriptionHtml" : "<pre><code>用例描述\n测试目的：ont为snooping模式（mvlan为3000，ip 239.1.1.1）,onu的native-vlan为2000，测试onu的跨组播vlan是否正常的\n测试步骤：\n步骤1:发现未注册的ONU\n步骤2:在OLT上通过SN的方式将ONU注册上线\n步骤3:配置onu端口native-vlan为2000\n步骤4:添加虚端口vlan透传2000\n步骤5:onu端口绑定组播模板200（mvlan3000 ,ip 239.1.1.1 ,dynamic acl）\n步骤6:打流测试\n1）客户端发送report报文加入组播239.1.1.1 ，然后服务端口发送组播239.1.1.1的数据流，10秒后，停止发流\n预期结果：服务端收到report报文，客户端收到组播数据流239.1.1.1\n2)服务端发送组播数据流，客户端发送离开报文，离开组播组239.1.1.1\n预期结果：客户端接收不到数据\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1594274181294,
      "stop" : 1594274181294,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1594274181294,
      "stop" : 1594274181294,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1594274388152,
      "stop" : 1594274388152,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1594274181293,
      "stop" : 1594274181294,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "login",
    "time" : {
      "start" : 1594274388152,
      "stop" : 1594274401203,
      "duration" : 13051
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n    用例描述\n    测试目的：ont为snooping模式（mvlan为3000，ip 239.1.1.1）,onu的native-vlan为2000，测试onu的跨组播vlan是否正常的\n    测试步骤：\n    步骤1:发现未注册的ONU\n    步骤2:在OLT上通过SN的方式将ONU注册上线\n    步骤3:配置onu端口native-vlan为2000\n    步骤4:添加虚端口vlan透传2000\n    步骤5:onu端口绑定组播模板200（mvlan3000 ,ip 239.1.1.1 ,dynamic acl）\n    步骤6:打流测试\n    1）客户端发送report报文加入组播239.1.1.1 ，然后服务端口发送组播239.1.1.1的数据流，10秒后，停止发流\n    预期结果：服务端收到report报文，客户端收到组播数据流239.1.1.1\n    2)服务端发送组播数据流，客户端发送离开报文，离开组播组239.1.1.1\n    预期结果：客户端接收不到数据\n\n    ",
    "status" : "passed",
    "steps" : [ {
      "name" : "步骤1:发现未注册的ONU。",
      "time" : {
        "start" : 1594274401204,
        "stop" : 1594274402314,
        "duration" : 1110
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤2:在OLT上通过SN的方式将ONU注册上线。",
      "time" : {
        "start" : 1594274402314,
        "stop" : 1594274423305,
        "duration" : 20991
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤3：配置onu端口native-vlan为2000",
      "time" : {
        "start" : 1594274423305,
        "stop" : 1594274423450,
        "duration" : 145
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤4：添加虚端口vlan透传2000",
      "time" : {
        "start" : 1594274423450,
        "stop" : 1594274427483,
        "duration" : 4033
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤5:onu端口绑定组播模板",
      "time" : {
        "start" : 1594274427483,
        "stop" : 1594274429665,
        "duration" : 2182
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "步骤6:onu组播打流测试",
      "time" : {
        "start" : 1594274429666,
        "stop" : 1594274483606,
        "duration" : 53940
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "5878b1c6f0f00d89",
      "name" : "log",
      "source" : "5878b1c6f0f00d89.txt",
      "type" : "text/plain",
      "size" : 1159
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "stepsCount" : 6,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "login::0",
    "time" : {
      "start" : 1594274483608,
      "stop" : 1594274491754,
      "duration" : 8146
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "onu 组播测试"
  }, {
    "name" : "story",
    "value" : "onu 组播snooping测试"
  }, {
    "name" : "suite",
    "value" : "test_onu_multicast"
  }, {
    "name" : "host",
    "value" : "DESKTOP-2JV12RE"
  }, {
    "name" : "thread",
    "value" : "29760-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_onu_multicast"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "7c862ff7b632d9ee",
      "status" : "passed",
      "time" : {
        "start" : 1594273616800,
        "stop" : 1594273686862,
        "duration" : 70062
      }
    }, {
      "uid" : "c6b6e4a4c2212f44",
      "status" : "passed",
      "time" : {
        "start" : 1594273168727,
        "stop" : 1594273239188,
        "duration" : 70461
      }
    }, {
      "uid" : "4a4fb5a5e606469e",
      "status" : "broken",
      "statusDetails" : "Exception: bring online port(Port_5) failed",
      "time" : {
        "start" : 1594272696953,
        "stop" : 1594272736705,
        "duration" : 39752
      }
    }, {
      "uid" : "ff8fa8cbdd5e17f4",
      "status" : "passed",
      "time" : {
        "start" : 1594198964927,
        "stop" : 1594199017316,
        "duration" : 52389
      }
    }, {
      "uid" : "b35674e630c61d0c",
      "status" : "passed",
      "time" : {
        "start" : 1594172789701,
        "stop" : 1594172843796,
        "duration" : 54095
      }
    }, {
      "uid" : "31e3807fe5c578f7",
      "status" : "broken",
      "statusDetails" : "TypeError: 'bool' object is not subscriptable",
      "time" : {
        "start" : 1594171083677,
        "stop" : 1594171083677,
        "duration" : 0
      }
    }, {
      "uid" : "1b7dd24da36b4b34",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = autofind_onu(<telnetlib.Telnet object at 0x000002E21D467780>, '16', '2', '5A54453171200033')",
      "time" : {
        "start" : 1594128335250,
        "stop" : 1594128335250,
        "duration" : 0
      }
    }, {
      "uid" : "93ead7515180401f",
      "status" : "passed",
      "time" : {
        "start" : 1594122968913,
        "stop" : 1594123021855,
        "duration" : 52942
      }
    }, {
      "uid" : "4c00901687e5ce60",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = autofind_onu(<telnetlib.Telnet object at 0x0000027E35770898>, '16', '2', '5A54453171200033')",
      "time" : {
        "start" : 1594112808077,
        "stop" : 1594112808077,
        "duration" : 0
      }
    }, {
      "uid" : "40e2efa9e1913107",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = auth_by_sn(<telnetlib.Telnet object at 0x00000208DF55E860>, '16', '2', '200', '200', '5A54453171200033')",
      "time" : {
        "start" : 1594038391152,
        "stop" : 1594038391152,
        "duration" : 0
      }
    }, {
      "uid" : "4dd4a221e2f680d",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = auth_by_sn(<telnetlib.Telnet object at 0x00000208E2995898>, '16', '2', '200', '200', '5A54453171200033')",
      "time" : {
        "start" : 1594038302858,
        "stop" : 1594038302858,
        "duration" : 0
      }
    }, {
      "uid" : "ef2e1f87d1a1665b",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = auth_by_sn(<telnetlib.Telnet object at 0x00000208E29CE7F0>, '16', '2', '200', '200', '5A54453171200033')",
      "time" : {
        "start" : 1594038214693,
        "stop" : 1594038214693,
        "duration" : 0
      }
    }, {
      "uid" : "895a3d960b334254",
      "status" : "passed",
      "time" : {
        "start" : 1594020043809,
        "stop" : 1594020097765,
        "duration" : 53956
      }
    }, {
      "uid" : "e613140ec6a6e876",
      "status" : "broken",
      "statusDetails" : "TypeError: 'bool' object is not subscriptable",
      "time" : {
        "start" : 1593999809522,
        "stop" : 1593999809522,
        "duration" : 0
      }
    }, {
      "uid" : "2b3ea0c1bcc122f3",
      "status" : "passed",
      "time" : {
        "start" : 1593772299483,
        "stop" : 1593772351306,
        "duration" : 51823
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "747733734451e6cd.json",
  "parameterValues" : [ ]
}