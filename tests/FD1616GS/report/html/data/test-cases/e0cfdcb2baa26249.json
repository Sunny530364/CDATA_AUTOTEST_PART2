{
  "uid" : "e0cfdcb2baa26249",
  "name" : "测试onu端口入口限速",
  "fullName" : "test_onu_limitrate#test_ont_port_inbound_limitrate",
  "historyId" : "3859766bb846720c82dc8f750c0931e5",
  "time" : {
    "start" : 1594343715751,
    "stop" : 1594343775039,
    "duration" : 59288
  },
  "description" : "\n    用例描述\n    测试目的： 测试onu端口上行限速是否正常\n    测试步骤：\n    步骤1: 发现未注册的ONU\n    步骤2: 在OLT上通过SN的方式将ONU注册上线\n    步骤3: 配置onu端口的入口的速率（traffic-profile 1:\n           traffic-profile  profile-id 1 profile-name inbound_limit cir 20480 pir 30960 cbs 2000 pbs 2000)\n    步骤4: 配置虚端口vlan2000透传\n    步骤5: 打流测试\n    测试方法: 上下行各发送流：vlan2000 (速率为端口速率的10%)\n    预期结果: 上下行正常通，下行不限速，上行限速30M\n\n    ",
  "descriptionHtml" : "<pre><code>用例描述\n测试目的： 测试onu端口上行限速是否正常\n测试步骤：\n步骤1: 发现未注册的ONU\n步骤2: 在OLT上通过SN的方式将ONU注册上线\n步骤3: 配置onu端口的入口的速率（traffic-profile 1:\n       traffic-profile  profile-id 1 profile-name inbound_limit cir 20480 pir 30960 cbs 2000 pbs 2000)\n步骤4: 配置虚端口vlan2000透传\n步骤5: 打流测试\n测试方法: 上下行各发送流：vlan2000 (速率为端口速率的10%)\n预期结果: 上下行正常通，下行不限速，上行限速30M\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = autofind_onu(<telnetlib.Telnet object at 0x000001EB18A71860>, '16', '2', '5A54453171200033')",
  "statusTrace" : "login = <telnetlib.Telnet object at 0x000001EB18A71860>\n\n    @allure.feature(\"onu限速测试\")\n    @allure.story(\"onu端口限速测试\")\n    @allure.title(\"测试onu端口入口限速\")\n    @pytest.mark.run(order=19)\n    def test_ont_port_inbound_limitrate(login):\n        '''\n        用例描述\n        测试目的： 测试onu端口上行限速是否正常\n        测试步骤：\n        步骤1: 发现未注册的ONU\n        步骤2: 在OLT上通过SN的方式将ONU注册上线\n        步骤3: 配置onu端口的入口的速率（traffic-profile 1:\n               traffic-profile  profile-id 1 profile-name inbound_limit cir 20480 pir 30960 cbs 2000 pbs 2000)\n        步骤4: 配置虚端口vlan2000透传\n        步骤5: 打流测试\n        测试方法: 上下行各发送流：vlan2000 (速率为端口速率的10%)\n        预期结果: 上下行正常通，下行不限速，上行限速30M\n    \n        '''\n    \n        cdata_info(\"=========ONU端口入口限速测试=========\")\n        tn = login\n        Vlan_list = [2000]\n        # 配置onu端口的入口和出口的速率（traffic-profile ）\n        with allure.step('步骤1:发现未注册的ONU。'):\n>           assert autofind_onu(tn, PonID, OnuID, SN)\nE           AssertionError: assert False\nE            +  where False = autofind_onu(<telnetlib.Telnet object at 0x000001EB18A71860>, '16', '2', '5A54453171200033')\n\ntest_onu_limitrate.py:89: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1594343702696,
      "stop" : 1594343715749,
      "duration" : 13053
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1594296062434,
      "stop" : 1594296062434,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1594343702696,
      "stop" : 1594343702696,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "__pytest_repeat_step_number",
    "time" : {
      "start" : 1594343702696,
      "stop" : 1594343702696,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1594296062433,
      "stop" : 1594296062433,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1594296062433,
      "stop" : 1594296062433,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n    用例描述\n    测试目的： 测试onu端口上行限速是否正常\n    测试步骤：\n    步骤1: 发现未注册的ONU\n    步骤2: 在OLT上通过SN的方式将ONU注册上线\n    步骤3: 配置onu端口的入口的速率（traffic-profile 1:\n           traffic-profile  profile-id 1 profile-name inbound_limit cir 20480 pir 30960 cbs 2000 pbs 2000)\n    步骤4: 配置虚端口vlan2000透传\n    步骤5: 打流测试\n    测试方法: 上下行各发送流：vlan2000 (速率为端口速率的10%)\n    预期结果: 上下行正常通，下行不限速，上行限速30M\n\n    ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = autofind_onu(<telnetlib.Telnet object at 0x000001EB18A71860>, '16', '2', '5A54453171200033')",
    "statusTrace" : "login = <telnetlib.Telnet object at 0x000001EB18A71860>\n\n    @allure.feature(\"onu限速测试\")\n    @allure.story(\"onu端口限速测试\")\n    @allure.title(\"测试onu端口入口限速\")\n    @pytest.mark.run(order=19)\n    def test_ont_port_inbound_limitrate(login):\n        '''\n        用例描述\n        测试目的： 测试onu端口上行限速是否正常\n        测试步骤：\n        步骤1: 发现未注册的ONU\n        步骤2: 在OLT上通过SN的方式将ONU注册上线\n        步骤3: 配置onu端口的入口的速率（traffic-profile 1:\n               traffic-profile  profile-id 1 profile-name inbound_limit cir 20480 pir 30960 cbs 2000 pbs 2000)\n        步骤4: 配置虚端口vlan2000透传\n        步骤5: 打流测试\n        测试方法: 上下行各发送流：vlan2000 (速率为端口速率的10%)\n        预期结果: 上下行正常通，下行不限速，上行限速30M\n    \n        '''\n    \n        cdata_info(\"=========ONU端口入口限速测试=========\")\n        tn = login\n        Vlan_list = [2000]\n        # 配置onu端口的入口和出口的速率（traffic-profile ）\n        with allure.step('步骤1:发现未注册的ONU。'):\n>           assert autofind_onu(tn, PonID, OnuID, SN)\nE           AssertionError: assert False\nE            +  where False = autofind_onu(<telnetlib.Telnet object at 0x000001EB18A71860>, '16', '2', '5A54453171200033')\n\ntest_onu_limitrate.py:89: AssertionError",
    "steps" : [ {
      "name" : "步骤1:发现未注册的ONU。",
      "time" : {
        "start" : 1594343715753,
        "stop" : 1594343775038,
        "duration" : 59285
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert False\n +  where False = autofind_onu(<telnetlib.Telnet object at 0x000001EB18A71860>, '16', '2', '5A54453171200033')\n",
      "statusTrace" : "  File \"E:\\CDATA\\自动化测试\\Cdata_part11\\tests\\GponSfu\\test_onu_limitrate.py\", line 89, in test_ont_port_inbound_limitrate\n    assert autofind_onu(tn, PonID, OnuID, SN)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "3efbf0222ac1d59d",
      "name" : "log",
      "source" : "3efbf0222ac1d59d.txt",
      "type" : "text/plain",
      "size" : 852
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "login::0",
    "time" : {
      "start" : 1594343775122,
      "stop" : 1594343834355,
      "duration" : 59233
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "onu限速测试"
  }, {
    "name" : "story",
    "value" : "onu端口限速测试"
  }, {
    "name" : "suite",
    "value" : "test_onu_limitrate"
  }, {
    "name" : "host",
    "value" : "DESKTOP-2JV12RE"
  }, {
    "name" : "thread",
    "value" : "31328-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_onu_limitrate"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "__pytest_repeat_step_number",
    "value" : "6"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "e0cfdcb2baa26249.json",
  "parameterValues" : [ "6" ]
}