{"name": "测试mapping-mode为port", "status": "broken", "statusDetails": {"message": "NameError: name 'test_info' is not defined", "trace": "login = <telnetlib.Telnet object at 0x0000022A08C2AA58>\n\n    @pytest.fixture(scope='function')\n    def gemport_port_suit(login):\n        tn = login\n        Vlan_list=[2000]\n        with allure.step('步骤1:发现未注册的ONU。'):\n            assert autofind_onu(tn, PonID,  OnuID, SN)\n        with allure.step('步骤2:在OLT上通过SN的方式将ONU注册上线。'):\n            assert auth_by_sn(tn ,PonID, OnuID, Ont_Lineprofile_ID, Ont_Srvprofile_ID, SN)\n        with allure.step(\"步骤3:修改gemport配置为port 2\"):\n>           assert gemport_port(tn,ont_lineprofile_id = Ont_Lineprofile_ID)\n\ntest_onu_gemport.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntn = <telnetlib.Telnet object at 0x0000022A08C2AA58>, ont_lineprofile_id = '200', mapping_mode = 'port'\n\n    def gemport_port(tn,ont_lineprofile_id=200,mapping_mode='port'):\n        # 判断当前的视图是否正确。\n        # 进入线路模板视图下\n        cdata_info(\"配置mapping-mode为port\")\n        tn.write('ont-lineprofile gpon profile-id {} '.format(ont_lineprofile_id).encode() + b'\\n')\n        result = tn.read_until('OLT(config-ont-lineprofile-{})# '.format(ont_lineprofile_id).encode(), timeout=2)\n        if result:\n            pass\n        else:\n            print(\"==========================================\")\n            print(\"===============ERROR!!!===================\")\n            cdata_error('当前OLT所在的视图不正确，请检查上一个模块的代码。')\n            print(\"==========================================\")\n            tn.write(b\"commit\" + b'\\n')\n            tn.write(b\"exit\" + b\"\\n\")\n            result = tn.read_until(b\"OLT(config)#\", timeout=2)\n            return False\n        # 删除gem mapping 1\n        tn.write(b'no gem mapping  1  1 ' + b'\\n')\n        tn.read_until('OLT(config-ont-lineprofile-{})# '.format(ont_lineprofile_id).encode(), timeout=2)\n        # 修改mapping-mode is port\n        tn.write(' mapping-mode {0}'.format(mapping_mode).encode() + b'\\n')\n        tn.read_until('OLT(config-ont-lineprofile-{})# '.format(ont_lineprofile_id).encode(), timeout=2)\n        # 判断mapping_mode设置是否正常\n        tn.write(b'show ont-lineprofile current' + b'\\n')\n        result = tn.read_until('OLT(config-ont-lineprofile-{})# '.format(ont_lineprofile_id).encode(),\n                               timeout=2).decode(\"utf-8\")\n        if \" Mapping mode     : PORT\" in result:\n>           test_info(\"线路模板:mapping_mode设置成port正常\")\nE           NameError: name 'test_info' is not defined\n\n..\\..\\src\\Gpon\\gemport.py:327: NameError"}, "description": "\n    mapping-mode is port,config gem mapping port 2\n    测试方法：往onu的port1 上下行发送vlan 2000的报文\n    结果：上下行都不通\n    ", "attachments": [{"name": "log", "source": "290823ad-f4b8-42e1-9341-35fa804ba174-attachment.txt", "type": "text/plain"}], "start": 1594186441766, "stop": 1594186441766, "uuid": "3f2bf3ad-a089-4ad5-adab-a58564181de7", "historyId": "e4e19f18d220b812d3eaed89b9b8697f", "testCaseId": "01253dee3361663186c9e3b6f028f998", "fullName": "test_onu_gemport#test_gemport_port", "labels": [{"name": "story", "value": "gemport测试"}, {"name": "feature", "value": "gemport测试"}, {"name": "suite", "value": "test_onu_gemport"}, {"name": "host", "value": "DESKTOP-2JV12RE"}, {"name": "thread", "value": "23872-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_onu_gemport"}]}