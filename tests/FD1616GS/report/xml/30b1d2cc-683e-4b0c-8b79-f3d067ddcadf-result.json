{"name": "测试onu端口出口限速", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'FAIL' == 'PASS'\n  - FAIL\n  + PASS", "trace": "login = <telnetlib.Telnet object at 0x000001533BC66A90>\n\n    @allure.feature(\"onu限速测试\")\n    @allure.story(\"onu端口限速测试\")\n    @allure.title(\"测试onu端口出口限速\")\n    @pytest.mark.run(order=20)\n    def test_ont_port_outbound_limitrate(login):\n        '''\n        用例描述\n        测试目的： 测试onu端口上行限速是否正常\n        测试步骤：\n        步骤1: 发现未注册的ONU\n        步骤2: 在OLT上通过SN的方式将ONU注册上线\n        步骤3: 配置onu端口的入口的速率（traffic-profile 2:\n               traffic-profile  profile-id 2 profile-name outbound_limit cir 10240 pir 20480 cbs 2000 pbs 2000)\n        步骤4: 配置虚端口vlan2000透传\n        步骤5: 打流测试\n        测试方法: 上下行各发送流：vlan2000 (速率为端口速率的%10)\n        预期结果: 上下行正常通，上行不限速，下行限速20M\n    \n        '''\n        cdata_info(\"=========ONU端口出口限速测试=========\")\n        tn = login\n        Vlan_list = [2000]\n    \n        with allure.step('步骤1:发现未注册的ONU。'):\n            assert autofind_onu(tn, PonID,  OnuID, SN)\n        with allure.step('步骤2:在OLT上通过SN的方式将ONU注册上线。'):\n            assert auth_by_sn(tn ,PonID, OnuID, Ont_Lineprofile_ID, Ont_Srvprofile_ID, SN)\n        with allure.step('步骤3:配置onu端口的入口的速率（traffic-profile ）'):\n            assert ont_port_limitrate_outbound(tn, traffic_profile_id=Traffic_Profile_ID_outbound,ponid=PonID,ontid=OnuID,ethid=Ont_Port_ID)\n        with allure.step('步骤4:添加虚端口vlan透传2000'):\n            assert add_service_port(tn, PonID, OnuID, Gemport_ID, Vlan_list)\n        with allure.step('步骤5:打流测试。'):\n            # 清除测试仪的对象，防止影响下个用例的执行\n            time.sleep(5)\n            reset_rom_cmd = ResetROMCommand()\n            reset_rom_cmd.execute()\n    \n            # 发流量测试，上下行发送流量，速率为100M\n            port_location = ['//192.168.0.180/1/9', '//192.168.0.180/1/10']\n            duration = 60\n            down_stream_header = (\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:11 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:22:22:21',)\n    \n            up_stream_header = (\n                'ethernetII_1.sourceMacAdd=00:00:00:22:22:21 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:11',)\n            # 获取所有流量的统计值\n            result_stats = rate_test(port_location=port_location, down_stream_header=down_stream_header,\n                                        up_stream_header=up_stream_header,\n                                        rate=10,\n                                        duration=duration )\n            # 判断port1的上下行流量是否都是不通的，如果是返回PASS，否则返回FAIL\n            result1 = check_stream_rate(result_stats[0], result_stats[1],outbound_percent=0.2)\n    \n            # #删除onu端口的限速配置\n            # ont_port_limitrate_del(tn)\n    \n            # 正确的结果pri2的能通，pri3的不通\n            if result1 == 'PASS':\n                result = 'PASS'\n                cdata_info(\"ONU端口出口限速:打流测试正常\")\n            else:\n                result = 'FAIL'\n                cdata_error(\"ONU端口出口限速:打流测试失败\")\n>           assert result == 'PASS'\nE           AssertionError: assert 'FAIL' == 'PASS'\nE             - FAIL\nE             + PASS\n\ntest_onu_limitrate.py:193: AssertionError"}, "description": "\n    用例描述\n    测试目的： 测试onu端口上行限速是否正常\n    测试步骤：\n    步骤1: 发现未注册的ONU\n    步骤2: 在OLT上通过SN的方式将ONU注册上线\n    步骤3: 配置onu端口的入口的速率（traffic-profile 2:\n           traffic-profile  profile-id 2 profile-name outbound_limit cir 10240 pir 20480 cbs 2000 pbs 2000)\n    步骤4: 配置虚端口vlan2000透传\n    步骤5: 打流测试\n    测试方法: 上下行各发送流：vlan2000 (速率为端口速率的%10)\n    预期结果: 上下行正常通，上行不限速，下行限速20M\n\n    ", "steps": [{"name": "步骤1:发现未注册的ONU。", "status": "passed", "start": 1594279129583, "stop": 1594279130712}, {"name": "步骤2:在OLT上通过SN的方式将ONU注册上线。", "status": "passed", "start": 1594279130712, "stop": 1594279149963}, {"name": "步骤3:配置onu端口的入口的速率（traffic-profile ）", "status": "passed", "start": 1594279149963, "stop": 1594279150141}, {"name": "步骤4:添加虚端口vlan透传2000", "status": "passed", "start": 1594279150141, "stop": 1594279154196}, {"name": "步骤5:打流测试。", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'FAIL' == 'PASS'\n  - FAIL\n  + PASS\n", "trace": "  File \"E:\\CDATA\\自动化测试\\Cdata_part11\\tests\\GponSfu\\test_onu_limitrate.py\", line 193, in test_ont_port_outbound_limitrate\n    assert result == 'PASS'\n"}, "start": 1594279154196, "stop": 1594279226096}], "attachments": [{"name": "log", "source": "05b91635-80d3-4ef3-9a0d-d2f7c796e44d-attachment.txt", "type": "text/plain"}], "start": 1594279129581, "stop": 1594279226096, "uuid": "51159266-805c-4bad-b026-637dc9f18219", "historyId": "ade4603e14026644d60b10661bddc14f", "testCaseId": "d5b1d66ab5210fcea1886029cc843297", "fullName": "test_onu_limitrate#test_ont_port_outbound_limitrate", "labels": [{"name": "feature", "value": "onu限速测试"}, {"name": "story", "value": "onu端口限速测试"}, {"name": "suite", "value": "test_onu_limitrate"}, {"name": "host", "value": "DESKTOP-2JV12RE"}, {"name": "thread", "value": "32408-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_onu_limitrate"}]}