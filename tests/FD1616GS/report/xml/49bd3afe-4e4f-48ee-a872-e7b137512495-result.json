{"name": "onu mac地址上报测试", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "ont_mac_learn_suit = <telnetlib.Telnet object at 0x0000028D176BA828>\n\n    @allure.feature(\"onu mac地址上报测试\")\n    @allure.story(\"onu mac地址上报测试\")\n    @allure.title(\"onu mac地址上报测试\")\n    def test_ont_mac_learn(ont_mac_learn_suit):\n        '''测试onu端口mac地址学习是否正常'''\n    \n        # 清除测试仪的对象，防止影响下个用例的执行\n        time.sleep(3)\n        reset_rom_cmd = ResetROMCommand()\n        reset_rom_cmd.execute()\n    \n        # 发流量测试，发送两条流2000+pri2，和vlan2000+pri3\n        port_location = ['//192.168.0.180/1/9', '//192.168.0.180/1/10']\n        duration = 5\n        down_stream_header = (\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:11 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:21',\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:12 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:22',\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:13 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:23',\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:14 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:24',\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:15 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:25',)\n    \n        up_stream_header = (\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:21 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:11',\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:22 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:12',\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:23 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:13',\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:24 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:14',\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:25 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:15',\n        )\n        # 获取所有流量的统计值\n        result_stats = unicast_test(port_location=port_location, down_stream_header=down_stream_header,\n                                    up_stream_header=up_stream_header, num=5, dataclassname=PortStats,\n>                                   duration=duration)\n\ntest_onu_mac_learn.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nport_location = ['//192.168.0.180/1/9', '//192.168.0.180/1/10']\ndown_stream_header = ('ethernetII_1.sourceMacAdd=00:00:00:11:11:11 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:21', 'ethernetII_...:00:22:22:24', 'ethernetII_1.sourceMacAdd=00:00:00:11:11:15 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:25')\nup_stream_header = ('ethernetII_1.sourceMacAdd=00:00:00:22:22:21 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:11', 'ethernetII_1...0:00:11:11:14', 'ethernetII_1.sourceMacAdd=00:00:00:22:22:25 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:15')\nrate = 10, num = 5, dataclassname = <class 'renix_py_api.api_gen.PortStats_Autogen.PortStats'>, duration = 5\n\n    def unicast_test(port_location,down_stream_header,up_stream_header,rate=10,num=1,dataclassname=StreamBlockStats,duration=10):\n        # 定义变量\n        sys_entry = get_sys_entry()\n        verdict = 'PASS'\n        errInfo = []\n        result = []\n        #预约端口\n        port1, port2 = create_ports(sys_entry, port_location)\n        # 修改端口流发送模式\n        edit_streamconfig(port1)\n        edit_streamconfig(port2)\n    \n        #编辑流\n        port1_stream_header = down_stream_header\n        port2_stream_header = up_stream_header\n    \n        for i in range(num):\n            name1 = re.findall(r'sourceMacAdd=\\d+:\\d+:\\d+:\\d+:\\d+:\\d+',port1_stream_header[i])[0]\n            name2 = re.findall(r'sourceMacAdd=\\d+:\\d+:\\d+:\\d+:\\d+:\\d+',port2_stream_header[i])[0]\n            # 创建流模板\n            stream1 = create_stream(port1, name1,rate)\n            stream2 = create_stream(port2, name2,rate)\n    \n            #编辑流\n            edit_stream(stream1, port1_stream_header[i])\n            edit_stream(stream2, port2_stream_header[i])\n            # config rx port\n            stream1.set_relatives('Rxport', port2, EnumRelationDirection.TARGET)\n            stream2.set_relatives('Rxport', port1, EnumRelationDirection.TARGET)\n    \n        if dataclassname==StreamBlockStats:\n            # create result view\n            page_result_view = creat_view(sys_entry=sys_entry, dataclassname=StreamBlockStats)\n            # Pre-Start stream\n            pre_start_stream()\n            # Clear statistic\n            result_clear_cmd = ClearResultCommand(ResultViewHandles=page_result_view.handle)\n            result_clear_cmd.execute()\n            # Start stream and stop stream\n            start_stream(duration=duration)\n            # get stream statistic\n            time.sleep(3)\n            result_query = page_result_view.get_children()[0]\n            streams_stats=[]\n            for i in range(len(result_query.get_children('StreamBlockStats'))):\n                stream_stats = result_query.get_children('StreamBlockStats')[i]\n                streams_stats.append(stream_stats)\n    \n            result_stats=streams_stats\n    \n        elif dataclassname==PortStats:\n            # create result view\n            page_result_view = creat_view(sys_entry=sys_entry, dataclassname=PortStats)\n            # Pre-Start stream\n            pre_start_stream()\n            # Clear statistic\n            result_clear_cmd = ClearResultCommand(ResultViewHandles=page_result_view.handle)\n            result_clear_cmd.execute()\n            # Start stream and stop stream\n            start_stream(duration=duration)\n            # get stream statistic\n            time.sleep(3)\n            result_query = page_result_view.get_children()[0]\n>           port1_stats = result_query.get_children('PortStats')[0]\nE           IndexError: list index out of range\n\n..\\..\\src\\xinertel\\unicast66.py:522: IndexError"}, "description": "测试onu端口mac地址学习是否正常", "attachments": [{"name": "log", "source": "8e06f612-f307-48cd-86bf-ff38044b5abb-attachment.txt", "type": "text/plain"}], "start": 1593771871078, "stop": 1593771894358, "uuid": "4017dc68-81e4-447d-9578-cc4cd153ad02", "historyId": "efeb02a4d4f48f95e3052e2025676887", "testCaseId": "6a275654915953cf0153573f6fd44416", "fullName": "test_onu_mac_learn#test_ont_mac_learn", "labels": [{"name": "feature", "value": "onu mac地址上报测试"}, {"name": "story", "value": "onu mac地址上报测试"}, {"name": "suite", "value": "test_onu_mac_learn"}, {"name": "host", "value": "DESKTOP-2JV12RE"}, {"name": "thread", "value": "1900-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_onu_mac_learn"}]}