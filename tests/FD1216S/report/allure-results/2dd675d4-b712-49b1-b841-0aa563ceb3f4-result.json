{"name": "测试onu端口vlan为tag", "status": "broken", "statusDetails": {"message": "NameError: name 'ONU_MAC' is not defined", "trace": "onu_vlan_suit = <telnetlib.Telnet object at 0x00000135D6A72A58>\n\n    @allure.feature(\"onu端口vlan测试\")\n    @allure.story(\"onu端口vlan测试\")\n    @allure.title(\"测试onu端口vlan为tag\")\n    @pytest.mark.run(order=13)\n    def test_onu_tag(onu_vlan_suit):\n        '''\n        用例描述\n        测试目的： 测试onu端口为translate，translate100-107 转2000-2007,测试上下行流量是否正常\n        测试步骤：\n        步骤1: 发现未注册的ONU\n        步骤2:在OLT上通过MAC的方式将ONU注册上线。\n        步骤3:配置onu端口为tag模式（tag2000，native-vlan2000）\n        步骤4:打流测试(上行不带tag流通)\n        1）上下行发untag的报文\n         down_stream_header = (\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:11  ethernetII_1.destMacAdd=00:00:00:22:22:21',)\n        up_stream_header = (\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:21   ethernetII_1.destMacAdd=00:00:00:11:11:11',)\n        预期结果: 下行vlan2000-2007的通，下行vlan2008的不通；上行vlan100-107的通，上行vlan108的不通\n        步骤4：打流测试(上行带tag流不通)\n        1）下行发vlan2000的流，上行发vlan200的流\n         down_stream_header = (\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:11 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:21',)\n        up_stream_header = (\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:21 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:11:11:11',)\n        预期结果: 下行vlan2000-2007的通，下行vlan2008的不通；上行vlan100-107的通，上行vlan108的不通\n        步骤6：onu端口vlan恢复为transparent\n        '''\n    \n        cdata_info(\"=========测试ONU端口vlan为tag模式=========\")\n        tn = onu_vlan_suit\n        with allure.step('步骤1:发现未注册的ONU。'):\n>           assert autofind_onu(tn, PonID, OnuID, ONU_MAC)\nE           NameError: name 'ONU_MAC' is not defined\n\ntest_onu_vlan.py:127: NameError"}, "description": "\n    用例描述\n    测试目的： 测试onu端口为translate，translate100-107 转2000-2007,测试上下行流量是否正常\n    测试步骤：\n    步骤1: 发现未注册的ONU\n    步骤2:在OLT上通过MAC的方式将ONU注册上线。\n    步骤3:配置onu端口为tag模式（tag2000，native-vlan2000）\n    步骤4:打流测试(上行不带tag流通)\n    1）上下行发untag的报文\n     down_stream_header = (\n        'ethernetII_1.sourceMacAdd=00:00:00:11:11:11  ethernetII_1.destMacAdd=00:00:00:22:22:21',)\n    up_stream_header = (\n        'ethernetII_1.sourceMacAdd=00:00:00:22:22:21   ethernetII_1.destMacAdd=00:00:00:11:11:11',)\n    预期结果: 下行vlan2000-2007的通，下行vlan2008的不通；上行vlan100-107的通，上行vlan108的不通\n    步骤4：打流测试(上行带tag流不通)\n    1）下行发vlan2000的流，上行发vlan200的流\n     down_stream_header = (\n        'ethernetII_1.sourceMacAdd=00:00:00:11:11:11 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:21',)\n    up_stream_header = (\n        'ethernetII_1.sourceMacAdd=00:00:00:22:22:21 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:11:11:11',)\n    预期结果: 下行vlan2000-2007的通，下行vlan2008的不通；上行vlan100-107的通，上行vlan108的不通\n    步骤6：onu端口vlan恢复为transparent\n    ", "steps": [{"name": "步骤1:发现未注册的ONU。", "status": "broken", "statusDetails": {"message": "NameError: name 'ONU_MAC' is not defined\n", "trace": "  File \"E:\\CDATA\\自动化测试\\Cdata_part11\\tests\\EponSfu\\test_onu_vlan.py\", line 127, in test_onu_tag\n    assert autofind_onu(tn, PonID, OnuID, ONU_MAC)\n"}, "start": 1597025992742, "stop": 1597025992742}], "attachments": [{"name": "log", "source": "19f902b1-b27c-4f8e-899a-f30ba6e5dac2-attachment.txt", "type": "text/plain"}], "start": 1597025992741, "stop": 1597025992742, "uuid": "b2505011-d629-4439-a477-53d1dc127c48", "historyId": "8652a659d5beba54d70481e9b6e3dad8", "testCaseId": "820deae303cce0744a21f5f3933d2fc7", "fullName": "EponSfu.test_onu_vlan#test_onu_tag", "labels": [{"name": "story", "value": "onu端口vlan测试"}, {"name": "feature", "value": "onu端口vlan测试"}, {"name": "parentSuite", "value": "EponSfu"}, {"name": "suite", "value": "test_onu_vlan"}, {"name": "host", "value": "DESKTOP-2JV12RE"}, {"name": "thread", "value": "36688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "EponSfu.test_onu_vlan"}]}