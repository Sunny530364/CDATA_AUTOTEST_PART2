{"name": "onu mac地址上报测试", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('FAIL' == 'PASS'\n  - FAIL\n  + PASS)", "trace": "login = <telnetlib.Telnet object at 0x00000230A0D97518>\n\n    @allure.feature(\"onu mac地址上报测试\")\n    @allure.story(\"onu mac地址上报测试\")\n    @allure.title(\"onu mac地址上报测试\")\n    @pytest.mark.run(order=1214)\n    def test_ont_mac_learn(login):\n        '''\n        用例描述\n        测试目的： 测试onu端口mac地址学习是否正常\n        测试步骤：\n        步骤1: 发现未注册的ONU\n        步骤2: 在OLT上通过MAC的方式将ONU注册上线\n        步骤3: 打流测试,查看onu端口mac地址表\n        1）上下行各发送流00:00:00:22:22:21递增5条，在olt上查看onu端口mac地址表\n        down_stream_header = (\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:11 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:21 ipv4_1.source=192.168.1.11 ipv4_1.destination=92.168.1.21',\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:12 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:22 ipv4_1.source=192.168.1.12 ipv4_1.destination=92.168.1.22',\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:13 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:23 ipv4_1.source=192.168.1.13 ipv4_1.destination=92.168.1.23',\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:14 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:24 ipv4_1.source=192.168.1.14 ipv4_1.destination=92.168.1.24',\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:15 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:25 ipv4_1.source=192.168.1.15 ipv4_1.destination=92.168.1.25',)\n        up_stream_header = (\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:21 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:11 ipv4_1.source=192.168.1.21 ipv4_1.destination=92.168.1.11',\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:22 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:12 ipv4_1.source=192.168.1.22 ipv4_1.destination=92.168.1.12',\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:23 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:13 ipv4_1.source=192.168.1.23 ipv4_1.destination=92.168.1.13',\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:24 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:14 ipv4_1.source=192.168.1.24 ipv4_1.destination=92.168.1.14',\n            'ethernetII_1.sourceMacAdd=00:00:00:22:22:25 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:15 ipv4_1.source=192.168.1.25 ipv4_1.destination=92.168.1.15',\n        )\n        预期结果: 上下行正常通，在olt上查看onu端口mac地址表有5条（00:00:00:22:22:21递增5条）\n        '''\n        renix_info(\"=========ONU MAC地址上报测试=========\")\n        cdata_info(\"=========ONU MAC地址上报测试=========\")\n        tn = login\n        with allure.step('步骤1:发现未注册的ONU。'):\n            assert autofind_onu(tn, Epon_PonID, Epon_OnuID, Epon_ONU_MAC)\n        with allure.step('步骤2:在OLT上通过MAC的方式将ONU注册上线。'):\n            assert auth_by_mac(tn, Epon_PonID, Epon_OnuID, Ont_Lineprofile_ID, Ont_Srvprofile_ID, Epon_ONU_MAC)\n        with allure.step(\"步骤3:打流测试,查看onu端口mac地址表\"):\n            # 清除测试仪的对象，防止影响下个用例的执行\n            time.sleep(3)\n            reset_rom_cmd = ResetROMCommand()\n            reset_rom_cmd.execute()\n    \n            # 发流量测试，发送两条流2000+pri2，和vlan2000+pri3\n            #port_location = ['//192.168.0.180/1/9', '//192.168.0.180/1/10']\n            duration = 5\n            down_stream_header = (\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:11 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:21 ipv4_1.source=192.168.1.11 ipv4_1.destination=92.168.1.21',\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:12 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:22 ipv4_1.source=192.168.1.12 ipv4_1.destination=92.168.1.22',\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:13 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:23 ipv4_1.source=192.168.1.13 ipv4_1.destination=92.168.1.23',\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:14 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:24 ipv4_1.source=192.168.1.14 ipv4_1.destination=92.168.1.24',\n                'ethernetII_1.sourceMacAdd=00:00:00:11:11:15 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:25 ipv4_1.source=192.168.1.15 ipv4_1.destination=92.168.1.25',)\n    \n            up_stream_header = (\n                'ethernetII_1.sourceMacAdd=00:00:00:22:22:21 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:11 ipv4_1.source=192.168.1.21 ipv4_1.destination=92.168.1.11',\n                'ethernetII_1.sourceMacAdd=00:00:00:22:22:22 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:12 ipv4_1.source=192.168.1.22 ipv4_1.destination=92.168.1.12',\n                'ethernetII_1.sourceMacAdd=00:00:00:22:22:23 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:13 ipv4_1.source=192.168.1.23 ipv4_1.destination=92.168.1.13',\n                'ethernetII_1.sourceMacAdd=00:00:00:22:22:24 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:14 ipv4_1.source=192.168.1.24 ipv4_1.destination=92.168.1.14',\n                'ethernetII_1.sourceMacAdd=00:00:00:22:22:25 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:15 ipv4_1.source=192.168.1.25 ipv4_1.destination=92.168.1.15',\n            )\n            # 获取所有流量的统计值\n            result_stats = unicast_test(port_location=port_location, down_stream_header=down_stream_header,\n                                        up_stream_header=up_stream_header, num=5, dataclassname=PortStats,\n                                        duration=duration)\n    \n            #判断流上下行接收是否正常\n            result_stream  = check_port_static(result_stats[0],result_stats[1])\n            #判断olt上是否能查看onu学习的mac地址\n            tn = login\n            result_show = ont_mac_learn(tn,Epon_PonID,Epon_OnuID,Ont_Port_ID)\n            result_mac = 'PASS'\n            if '00:00:00:22:22:21' in result_show and '00:00:00:22:22:22' in result_show and '00:00:00:22:22:23' in result_show \\\n                and  '00:00:00:22:22:24' in result_show and  '00:00:00:22:22:25' in result_show:\n                result_mac = 'PASS'\n            else:\n                result_mac = 'FAIL'\n    \n    \n            if result_mac == 'PASS':\n                cdata_error(\"ONT MAC地址上报:MAC地址学习正常\")\n            else:\n                cdata_error(\"ONT MAC地址上报:MAC地址学习失败\")\n    \n            if result_stream == 'PASS':\n                cdata_error(\"ONT MAC地址上报:打流正常\")\n            else:\n                cdata_error(\"ONT MAC地址上报:打流失败\")\n    \n>           assert result_stream=='PASS' and result_mac =='PASS'\nE           AssertionError: assert ('FAIL' == 'PASS'\nE             - FAIL\nE             + PASS)\n\nFD1216S\\test_onu_mac_learn.py:106: AssertionError"}, "description": "\n    用例描述\n    测试目的： 测试onu端口mac地址学习是否正常\n    测试步骤：\n    步骤1: 发现未注册的ONU\n    步骤2: 在OLT上通过MAC的方式将ONU注册上线\n    步骤3: 打流测试,查看onu端口mac地址表\n    1）上下行各发送流00:00:00:22:22:21递增5条，在olt上查看onu端口mac地址表\n    down_stream_header = (\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:11 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:21 ipv4_1.source=192.168.1.11 ipv4_1.destination=92.168.1.21',\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:12 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:22 ipv4_1.source=192.168.1.12 ipv4_1.destination=92.168.1.22',\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:13 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:23 ipv4_1.source=192.168.1.13 ipv4_1.destination=92.168.1.23',\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:14 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:24 ipv4_1.source=192.168.1.14 ipv4_1.destination=92.168.1.24',\n            'ethernetII_1.sourceMacAdd=00:00:00:11:11:15 vlan_1.id=2000  ethernetII_1.destMacAdd=00:00:00:22:22:25 ipv4_1.source=192.168.1.15 ipv4_1.destination=92.168.1.25',)\n    up_stream_header = (\n        'ethernetII_1.sourceMacAdd=00:00:00:22:22:21 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:11 ipv4_1.source=192.168.1.21 ipv4_1.destination=92.168.1.11',\n        'ethernetII_1.sourceMacAdd=00:00:00:22:22:22 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:12 ipv4_1.source=192.168.1.22 ipv4_1.destination=92.168.1.12',\n        'ethernetII_1.sourceMacAdd=00:00:00:22:22:23 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:13 ipv4_1.source=192.168.1.23 ipv4_1.destination=92.168.1.13',\n        'ethernetII_1.sourceMacAdd=00:00:00:22:22:24 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:14 ipv4_1.source=192.168.1.24 ipv4_1.destination=92.168.1.14',\n        'ethernetII_1.sourceMacAdd=00:00:00:22:22:25 vlan_1.id=2000 ethernetII_1.destMacAdd=00:00:00:11:11:15 ipv4_1.source=192.168.1.25 ipv4_1.destination=92.168.1.15',\n    )\n    预期结果: 上下行正常通，在olt上查看onu端口mac地址表有5条（00:00:00:22:22:21递增5条）\n    ", "steps": [{"name": "步骤1:发现未注册的ONU。", "status": "passed", "start": 1598336988454, "stop": 1598336998638}, {"name": "步骤2:在OLT上通过MAC的方式将ONU注册上线。", "status": "passed", "start": 1598336998638, "stop": 1598337041989}, {"name": "步骤3:打流测试,查看onu端口mac地址表", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('FAIL' == 'PASS'\n  - FAIL\n  + PASS)\n", "trace": "  File \"E:\\CDATA\\自动化测试\\Cdata_part11\\tests\\FD1216S\\test_onu_mac_learn.py\", line 106, in test_ont_mac_learn\n    assert result_stream=='PASS' and result_mac =='PASS'\n"}, "start": 1598337041989, "stop": 1598337074119}], "attachments": [{"name": "log", "source": "b74f0344-b718-4deb-a358-27c68dcb4193-attachment.txt", "type": "text/plain"}], "start": 1598336988453, "stop": 1598337074121, "uuid": "a2784e04-769a-4e8c-9dc2-523a210fac07", "historyId": "508b61c18fc4c551dba2c4621e1d6199", "testCaseId": "ac28935a80b8cc3e5c39f9bfe1e1ad75", "fullName": "FD1216S.test_onu_mac_learn#test_ont_mac_learn", "labels": [{"name": "story", "value": "onu mac地址上报测试"}, {"name": "feature", "value": "onu mac地址上报测试"}, {"name": "parentSuite", "value": "FD1216S"}, {"name": "suite", "value": "test_onu_mac_learn"}, {"name": "host", "value": "DESKTOP-2JV12RE"}, {"name": "thread", "value": "33668-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "FD1216S.test_onu_mac_learn"}]}